########################## R COMMANDS #########################

dir()	# list files in local working directory
dir(pattern=".txt")		# list files ending with .txt

############# view libraries loaded into workspace ################
search()	
sessionInfo()
library()		### Lists all installed packages

################# Lists objects in memory/session ######################
object()
ls()

########################### Data structures ############################
str(x)	# Summary of the structure of the object
head()	# shows the first part of the object
na.omit(x) # Remove missing data from object x

################ Writing and Exporting to Disc ########################

png(file="...... .png", width=800, height=800)
write.csv(x, file="....... .csv")
write.table(x, "filename.csv", sep=",", row.names=F)

## writing pca output
> pca <- prcomp(data[,1:3])
> pcasum <- summary(pca)
> pcarot <- pca$rotation[,1:3]
> str(pcarot)	## Determine which elements to extract
> write.table(pcarot[,1:3], "filename.csv", sep=",")
> str(pcasum)	## Determine which elements to extract
> write.table(pcasum$importance, "filename.csv", sep=",")

###################### PLOTTING ######################################
## Histogram ##
> hist(data[,2], nclass=15, main="Title")
> par(mfrow=c(2,2))		## multiple panels in graph
> hist(data[,2], nclass=15, main="")

## Scatter plots##
# pairs/plots() do the same thing
> pairs(data[,2:5], pch=19, col=factor(data[,5]))
> plot(data[,2:5], pch=19, col=c("red", "blue", "green")[factor(data[,5])])

### Plot PCA with ggplot2; 
library(“ggplot2”)species <- c(data[1])scores <- data.frame(species, pca$x[,1:2])qplot(x=PC1, y=PC2, data=scores, color=factor(species), size=I(8)) + theme(axis.text=element_text(size=20), axis.title=element_text(size=20), legend.text=element_text(size=20))

## Plot pca with 95% confidence ellipse ##
library(MASS)
library(ellipse)
library(ggplot2)
library(devtools)
library(digest)
library(proto)
## using ellipse ##
x <- pca$x[,1]
y <- pca$x[,2]
group <- data$[,1]
df <- data.frame(x=x, y=y, group=factor(group))

df_ell <- data.frame() 
for(g in levels(df$group)){df_ell <- rbind(df_ell, cbind(as.data.frame(with(df[df$group==g,], ellipse(cor(x, y),scale=c(sd(x),sd(y)),centre=c(mean(x),mean(y))))),group=g))} 

p1 <- ggplot(data=df, aes(x=x, y=y,colour=group)) + geom_point() + 
  geom_path(data=df_ell, aes(x=x, y=y,colour=group))

## using proto ##
p2 <-qplot(data=df, x=x,y=y,colour=group, size=I(8))+stat_ellipse(level=0.95)+ theme(axis.text=element_text(size=20), axis.title=element_text(size=20), legend.text=element_text(size=20))


############################## ANALYSES #############################
############################## ANALYSES #############################

### Summary stats ###
> colMeans(data[,2:5])	### Mean of columns 2:5
> aggregate(data[,2:4], by=list(data[,5]), mean) # aggregate data by mean according to factor
> aggregate(data[,2:4], by=list(data[,5]), sd) # aggregate according to standard deviation

### PCA ###
pca <-prcomp(x, scale=F) ## scale=T if you want to standardize data
summary(pca)
(pca$sdev)^2 ## eigenvalues
pca$rotation ## loadings

### Plot PCA ### 
plot(pca$x[,1], pca$x[,2], col=as.integer(data$identifier), pch=data[,4], xlab="PC I", ylab="PC II")

### Plot 3D PCA ###
(http://planspace.org/2013/02/03/pca-3d-visualization-and-clustering-in-r/)
pca <- princomp(data[,7:17], scale.=FALSE, scores=TRUE)
library(rgl)

#species=grouping variable; size=plotting symbol size
> plot3d(pca$scores[,1:3], col=data$species, size=8)

### LDA ###
library(MASS)
lda <- lda(species ~ SVL + HL + HW + ……… Fin3DW, data=data)
lda.values <- predict(lad, data[3:19])	# get lad values
ld1 <- lda.values$x[,1] # get values for LD1

### Mann-Whitney test
> wilcox.test(data[,14]~data[,4])

### Regression
Glm.data <- glm(SVL~HL)
#for multiple var use:
GLM.data <-glm(SVL~ HL + HW + …)
#residuals:
Glm.resid <- resid(glm)

### Write output to CSV
Write.csv(glm.resid, file=”resid.csv”)

### Normality Test
#data=dataset; V1=response variable; species=grouping variable
with(data, tapply(V1, species, shapiro.test))

### ANOVA
> fit <- aov(SVL ~ sex, data=aurantipunctata)
> summary(fit)

### ANCOVA
#MTTL=response; SVL=covariate; Locality=grouping variable
> anc=aov(MTTL~SVL+Locality, data=pmindochi)
> summary(anc)

#Results: only interested in the p-value for the Locality row

    Df Sum Sq Mean Sq F value   Pr(>F)    
SVL          1 1.8405  1.8405   64.77 4.35e-09 ***
Locality     2 1.1661  0.5830   20.52 2.11e-06 ***
Residuals   31 0.8809  0.0284  
